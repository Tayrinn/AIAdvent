package com.tayrinn.aiadvent.util

import java.io.File
import java.io.FileInputStream
import java.util.Properties

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
 */
class ConfigService {
    
    private val properties = Properties()
    private var isLoaded = false
    
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞
     */
    fun loadConfig(configPath: String = "config.properties") {
        try {
            val configFile = File(configPath)
            if (configFile.exists()) {
                FileInputStream(configFile).use { input ->
                    properties.load(input)
                }
                isLoaded = true
                println("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑: $configPath")
            } else {
                println("‚ö†Ô∏è –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $configPath")
                loadDefaultConfig()
            }
        } catch (e: Exception) {
            println("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${e.message}")
            loadDefaultConfig()
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    private fun loadDefaultConfig() {
        properties.setProperty("openai.api.key", "")
        properties.setProperty("openai.api.model", "gpt-3.5-turbo")
        properties.setProperty("openai.api.max_tokens", "2000")
        properties.setProperty("openai.api.temperature", "0.7")
        println("üìã –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     */
    fun getProperty(key: String, defaultValue: String = ""): String {
        if (!isLoaded) {
            loadConfig()
        }
        return properties.getProperty(key, defaultValue)
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞–∫ Int
     */
    fun getIntProperty(key: String, defaultValue: Int): Int {
        return getProperty(key, defaultValue.toString()).toIntOrNull() ?: defaultValue
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞–∫ Double
     */
    fun getDoubleProperty(key: String, defaultValue: Double): Double {
        return getProperty(key, defaultValue.toString()).toDoubleOrNull() ?: defaultValue
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
     */
    fun isConfigLoaded(): Boolean = isLoaded
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     */
    fun getAvailableKeys(): Set<String> = properties.stringPropertyNames()
}
