name: Pull Request Check

on:
  pull_request:
    branches: [ main, master, develop ]
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run linting
        run: ./gradlew lint
        env:
          GRADLE_OPTS: -Dorg.gradle.java.installations.auto-download=true

      - name: Run tests
        run: ./gradlew test
        env:
          GRADLE_OPTS: -Dorg.gradle.java.installations.auto-download=true

      - name: Build project
        run: ./gradlew build
        env:
          GRADLE_OPTS: -Dorg.gradle.java.installations.auto-download=true

      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
          requireScope: false

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Run Detekt (Kotlin code quality)
        run: ./gradlew detekt

      - name: Run Ktlint
        run: ./gradlew ktlintCheck

      - name: Run Spotless (code formatting)
        run: ./gradlew spotlessCheck
