#!/bin/bash

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ AIAdvent Desktop –ø–ª–∞–≥–∏–Ω–∞ –≤ JetBrains Marketplace
# –ê–≤—Ç–æ—Ä: Tayrinn
# –í–µ—Ä—Å–∏—è: 1.0.1

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_env() {
    if [ -f "env.local" ]; then
        export $(cat env.local | grep -v '^#' | xargs)
        log_info "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ env.local"
    else
        log_warning "–§–∞–π–ª env.local –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    fi
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PLUGIN_NAME="${PLUGIN_NAME:-AIAdvent Desktop}"
PLUGIN_ID="${PLUGIN_ID:-com.tayrinn.aiadvent.desktop}"
PLUGIN_VERSION="${PLUGIN_VERSION:-1.0.0}"
PLUGIN_JAR="desktop/build/libs/AIAdvent-Plugin-1.0.0.jar"
API_KEY="${JETBRAINS_API_KEY}"

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ API endpoints –¥–ª—è JetBrains Marketplace
MARKETPLACE_API="https://plugins.jetbrains.com/api"
PLUGIN_UPLOAD_URL="https://plugins.jetbrains.com/plugin/uploadPlugin"

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v curl &> /dev/null; then
        log_error "curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ curl –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        exit 1
    fi
    
    log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
check_files() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–ª–∞–≥–∏–Ω–∞..."
    
    if [ ! -f "$PLUGIN_JAR" ]; then
        log_error "–§–∞–π–ª –ø–ª–∞–≥–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $PLUGIN_JAR"
        log_info "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–ª–∞–≥–∏–Ω: ./gradlew :desktop:pluginJar"
        exit 1
    fi
    
    if [ ! -f "desktop/src/main/resources/META-INF/plugin.xml" ]; then
        log_error "plugin.xml –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    log_success "–§–∞–π–ª—ã –ø–ª–∞–≥–∏–Ω–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
check_file_size() {
    local file_size=$(stat -f%z "$PLUGIN_JAR" 2>/dev/null || stat -c%s "$PLUGIN_JAR" 2>/dev/null)
    local max_size=$((10 * 1024 * 1024))  # 10MB
    
    log_info "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø–ª–∞–≥–∏–Ω–∞: $((file_size / 1024)) KB"
    
    if [ $file_size -gt $max_size ]; then
        log_warning "–§–∞–π–ª –ø–ª–∞–≥–∏–Ω–∞ –±–æ–ª—å—à–µ 10MB. –≠—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ."
    fi
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–≥–∏–Ω–µ
get_plugin_info() {
    log_info "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–≥–∏–Ω–µ..."
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ plugin.xml
    local plugin_name=$(grep -o '<name>.*</name>' desktop/src/main/resources/META-INF/plugin.xml | sed 's/<name>\(.*\)<\/name>/\1/')
    local plugin_description=$(grep -o '<description>.*</description>' desktop/src/main/resources/META-INF/plugin.xml | sed 's/<description>\(.*\)<\/description>/\1/' | head -1)
    
    echo "–ù–∞–∑–≤–∞–Ω–∏–µ: $plugin_name"
    echo "–û–ø–∏—Å–∞–Ω–∏–µ: ${plugin_description:0:100}..."
    echo "–í–µ—Ä—Å–∏—è: $PLUGIN_VERSION"
    echo "ID: $PLUGIN_ID"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
test_api_key() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞..."
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∫–ª—é—á —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    local response=$(curl -s -H "Authorization: Bearer $API_KEY" \
        "$MARKETPLACE_API/plugins/search?query=test" 2>/dev/null || echo "error")
    
    if [ "$response" = "error" ] || echo "$response" | grep -q "unauthorized\|forbidden"; then
        log_error "API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–∞–≤"
        log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –≤ JetBrains Marketplace"
        exit 1
    fi
    
    log_success "API –∫–ª—é—á –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω"
}

# –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–æ—Å–æ–±)
publish_via_web() {
    log_info "–ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å..."
    
    log_success "üéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–æ—Å–æ–± –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:"
    echo
    log_info "1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://plugins.jetbrains.com/plugin/uploadPlugin"
    log_info "2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç JetBrains"
    log_info "3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª: $PLUGIN_JAR"
    log_info "4. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞–≥–∏–Ω–µ:"
    echo "   - –ù–∞–∑–≤–∞–Ω–∏–µ: $PLUGIN_NAME"
    echo "   - –û–ø–∏—Å–∞–Ω–∏–µ: AI-Powered Development Assistant"
    echo "   - –ö–∞—Ç–µ–≥–æ—Ä–∏—è: Productivity"
    echo "   - –¢–µ–≥–∏: AI, ChatGPT, Productivity, Development"
    log_info "5. –ù–∞–∂–º–∏—Ç–µ 'Upload Plugin'"
    echo
    log_info "üìã –§–∞–π–ª –ø–ª–∞–≥–∏–Ω–∞ –≥–æ—Ç–æ–≤: $PLUGIN_JAR"
    log_info "üìÅ –†–∞–∑–º–µ—Ä: $(( $(stat -f%z "$PLUGIN_JAR" 2>/dev/null || stat -c%s "$PLUGIN_JAR" 2>/dev/null) / 1024 )) KB"
}

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ API (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
publish_via_api() {
    log_info "–ü–æ–ø—ã—Ç–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ API..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
    local metadata_file="/tmp/plugin_metadata.json"
    cat > "$metadata_file" << EOF
{
    "name": "$PLUGIN_NAME",
    "pluginId": "$PLUGIN_ID",
    "description": "AI-Powered Development Assistant with OpenAI ChatGPT integration",
    "category": "Productivity",
    "tags": ["AI", "ChatGPT", "Productivity", "Development", "Testing"],
    "website": "https://github.com/tayrinn/aiadvent",
    "repository": "https://github.com/tayrinn/aiadvent.git"
}
EOF
    
    log_info "–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–ª–∞–≥–∏–Ω–∞:"
    cat "$metadata_file"
    echo
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–µ–∑ API
    log_info "–ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–≥–∏–Ω–∞ —á–µ—Ä–µ–∑ API..."
    
    local response=$(curl -s -X POST \
        -H "Authorization: Bearer $API_KEY" \
        -H "Content-Type: multipart/form-data" \
        -F "pluginId=$PLUGIN_ID" \
        -F "version=$PLUGIN_VERSION" \
        -F "file=@$PLUGIN_JAR" \
        -F "metadata=@$metadata_file" \
        "$PLUGIN_UPLOAD_URL" 2>/dev/null || echo "error")
    
    if [ "$response" = "error" ]; then
        log_warning "API –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å."
        publish_via_web
    else
        log_success "–ü–ª–∞–≥–∏–Ω –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ API!"
        echo "–û—Ç–≤–µ—Ç: $response"
    fi
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm -f "$metadata_file"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}  AIAdvent Plugin Publisher${NC}"
    echo -e "${BLUE}================================${NC}"
    echo
    
    log_info "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–∞..."
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_env
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_dependencies
    check_files
    check_file_size
    get_plugin_info
    
    echo
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∫–ª—é—á
    test_api_key
    
    echo
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
    if publish_via_api; then
        log_success "üéâ –ü–ª–∞–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!"
    else
        log_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
    fi
    
    echo
    log_info "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    log_info "1. –î–æ–∂–¥–∏—Ç–µ—Å—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (1-3 –¥–Ω—è)"
    log_info "2. –ü–æ–ª—É—á–∏—Ç–µ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏"
    log_info "3. –ü–ª–∞–≥–∏–Ω –ø–æ—è–≤–∏—Ç—Å—è –≤ Marketplace"
    echo
    log_info "üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: https://plugins.jetbrains.com/plugin/$PLUGIN_ID"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'log_error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í—ã—Ö–æ–¥."; exit 1' ERR

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
