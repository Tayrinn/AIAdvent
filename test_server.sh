#!/bin/bash

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI Code Analysis Server"
echo "======================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞
check_response() {
    local url=$1
    local expected_status=$2
    local description=$3

    echo -n "üîç $description: "

    response=$(curl -s -w "%{http_code}" -o /dev/null "$url")

    if [ "$response" = "$expected_status" ]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–®–ù–û${NC}"
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–∫–æ–¥: $response, –æ–∂–∏–¥–∞–ª—Å—è: $expected_status)${NC}"
    fi
}

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
check_response "http://localhost:8080/" "200" "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
check_response "http://localhost:8080/api/health" "200" "Health check"

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞
echo -n "üîç –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞: "

test_code='{
  "code": "fun divide(a: Double, b: Double?): Double {\n    return a / b!!\n}",
  "fileName": "Calculator.kt",
  "language": "kotlin"
}'

response=$(curl -s -X POST http://localhost:8080/api/analyze \
  -H "Content-Type: application/json" \
  -d "$test_code")

if echo "$response" | grep -q '"success":true'; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–®–ù–û${NC}"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –±–∞–≥–∏
    bugs=$(echo "$response" | grep -o '"bugs":\[[^]]*\]' | head -1)
    if [ ! -z "$bugs" ]; then
        echo "üêõ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –±–∞–≥–∏:"
        echo "$response" | grep -o '"description":"[^"]*"' | sed 's/"description":"//;s/"$//' | while read -r bug; do
            echo "   ‚Ä¢ $bug"
        done
    fi
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê${NC}"
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$response"
fi

echo ""

# –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
echo -n "üé® –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: "

image_request='{
  "prompt": "–∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –≥–æ—Ä–∞–º–∏",
  "style": "DEFAULT",
  "width": 512,
  "height": 512,
  "negativePrompt": "–ª—é–¥–∏, —Ç–µ–∫—Å—Ç"
}'

image_response=$(curl -s -X POST http://localhost:8080/api/generate-image \
  -H "Content-Type: application/json" \
  -d "$image_request")

if echo "$image_response" | grep -q '"success":true'; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–®–ù–û${NC}"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    image_url=$(echo "$image_response" | grep -o '"imageUrl":"[^"]*"' | sed 's/"imageUrl":"//;s/"$//')
    file_name=$(echo "$image_response" | grep -o '"fileName":"[^"]*"' | sed 's/"fileName":"//;s/"$//')

    if [ ! -z "$image_url" ]; then
        echo "üñºÔ∏è  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:"
        echo "   ‚Ä¢ URL: $image_url"
        echo "   ‚Ä¢ –§–∞–π–ª: $file_name"
    fi
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê${NC}"
    echo "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$image_response"
fi

echo ""

# –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
check_response "http://localhost:8080/generate" "200" "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"

echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ:"
echo "   ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å: http://localhost:8080"
echo "   ‚Ä¢ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑–≤–Ω–µ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤ –≤ —Ä–æ—É—Ç–µ—Ä–µ"
echo "   ‚Ä¢ –£–∑–Ω–∞—Ç—å –≤–Ω–µ—à–Ω–∏–π IP: curl ifconfig.me"
echo ""
echo "üéØ –ì–æ—Ç–æ–≤–æ!"
