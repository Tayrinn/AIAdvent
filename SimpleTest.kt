import java.io.File

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ñ—É–Ω–∫—Ü–∏–π
fun main() {
    val file = File("SimpleTestFile.kt")
    if (file.exists()) {
        val sourceCode = file.readText()
        println("‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω! –†–∞–∑–º–µ—Ä: ${sourceCode.length} —Å–∏–º–≤–æ–ª–æ–≤")
        println("\nüìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:")
        sourceCode.lines().forEachIndexed { index, line ->
            println("   ${index + 1:2d}: $line")
        }

        println("\nüîç –ü–æ–∏—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π:")
        var functionCount = 0
        sourceCode.lines().forEachIndexed { index, line ->
            if (line.contains("fun ")) {
                functionCount++
                val funIndex = line.indexOf("fun ")
                val parenStart = line.indexOf('(', funIndex)
                val parenEnd = line.indexOf(')', parenStart)
                println("   üìç –§—É–Ω–∫—Ü–∏—è $functionCount –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${index + 1}:")
                println("      –°—Ç—Ä–æ–∫–∞: '$line'")
                println("      funIndex=$funIndex, parenStart=$parenStart, parenEnd=$parenEnd")

                if (parenEnd != -1) {
                    val signature = line.substring(funIndex, parenEnd + 1).trim()
                    println("      –°–∏–≥–Ω–∞—Ç—É—Ä–∞: '$signature'")

                    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏
                    val afterFun = signature.substring(4)
                    val spaceIndex = afterFun.indexOf(' ')
                    val parenIndex = afterFun.indexOf('(')
                    val functionName = when {
                        spaceIndex != -1 && spaceIndex < parenIndex -> afterFun.substring(0, spaceIndex)
                        parenIndex != -1 -> afterFun.substring(0, parenIndex)
                        else -> "unknown"
                    }
                    println("      –ò–º—è —Ñ—É–Ω–∫—Ü–∏–∏: '$functionName'")
                } else {
                    println("      ‚ùå –û—à–∏–±–∫–∞: –Ω–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–∏")
                }
                println()
            }
        }

        println("üìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü–∏–π: $functionCount")
    } else {
        println("‚ùå –§–∞–π–ª SimpleTestFile.kt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        println("   –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${System.getProperty("user.dir")}")
    }
}
